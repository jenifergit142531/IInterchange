


Agenda :

- Data annotation

- Collections

* Generic and Non-Generic Collection

* Index based
- Array List,List

* Key Value
- Hash table and sorted List

* Prioritised
- Stack and Queue

* Specialised
- Dictionary


- Data Annotation :

=> Data validation 
=> Database mapping
=> describes how the data should be treated and validated


using System.ComponentModel.DataAnnotations;

RegEx : Regular expression

- Pattern that validates your code


Collections :

built in data structures
- Deal with large volume of data 
- IEnumerable - root interface

Types : 

Generic :

* System.Collections.Generics
* Strongly typed
* Type safe
Eg:
List<T>
Dictionary<Tkey,Tvalue)
sortedlist
hashset
stack<T>,queue<T>

Non-Generic :

- System.collectuions
- Not strongly typed
- Not type safe
eg : arraylist,hashtable,stack,queue

* Indexed Based :

Array List :

- Dynamic in nature
- size can he changed 
- Different data types
- insertion / deletion is faster
- Properties : capacity , count
- methods : add,remove,sort,reverse

List :

- Generic collection
- strongly typed


Hashset :

- avoids duplicate value
- Not indexed like arraylist / list
- holds unique values
- generic type


Key- value :

key : attribute
value : actual data

1.Hash table
2.sorted list




* Prioritised

- specifying the order of execution
- Stack

LIFO - Last in first out

*Eg : Browser back button 
- stack of books
- pile of plates


push - add elements

pop - remove elements

- Queue

FIFO - first in first out 
eg :

- waiting line 
- airport luggaging system
- ticketing systems

enqueue - add elements

dequeue - remove elements

