

Agenda :

- Serialization

* Binary serialization
* XML Serialization
* JSON Serialization

- Attributes

* Built in attribute
* Custom attribute

[AttributeUsage(Attribute.Property)]
class IsemptyAttribute : ValidateAttibute
{
}

[Isempty]
public string phoneno {get;set}

- Threads 

Serialization :

- converting your object into bytes which can then be stored in a
 file / database / memory

 * Binary serialization :

 converts the object to binary format
 - This format is not human readable
 - Its often used for local storage for transmitting the data in binary format
 - BinaryFormatter - class that is used for binary serialization


 * XML Serialization:

 - converts the object to XML Format
 - This format is human readable

 * JSON Serialization :

 - converts objects to JSON Format
 - {"","","".....""}
 - Widely used on REST API,Web services.

 Attributes :

 - Some info added to your code
 - some addln functionalities included on your code


 Thread :

 - light weight process
 - code of execution
 - one thread execute one job at a time

 Synchronous : 

 - thread1 -- work1,work2,work3...
 - time consuming and not efficient

 Asynchronous :

 - all the threads run in parallel
 thread1 --> work1
 thread2 ---> work2
 thread3---> work3

 Multithreading : many threads executes multiple jobs at the same time

 Lifecycle of Thread :(stages)

 1.Unstarted: thread is created , but execution  not started

 thread th=new thread();

 2.Started : start() , thread execution begins

 3.Running :threads in run

 4.Not Runnable : wait() - operation is blocked,sleep() - idle 

 5.Dead - Thread is terminated 

 Types :

 - Foreground Thread

 * even if the main thread stops , the child thread will keep executing

 - Background Thread

 * if the main thread stops , the child thread also stops the execution









