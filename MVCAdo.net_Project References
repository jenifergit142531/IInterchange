using System.Diagnostics;
using Microsoft.AspNetCore.Mvc;
using AdoNetDemo.Models;
using Microsoft.Data.SqlClient;


namespace AdoNetDemo.Controllers;

public class InventoryController : Controller
{
    public IConfiguration Configuration { get; }

    public InventoryController(IConfiguration configuration)
        {
            Configuration = configuration;
        }
        public IActionResult Index()
        {
            List<Inventory> inventoryList=new List<Inventory>();
            string connectionString = Configuration["ConnectionStrings:DefaultConnection"];
            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                connection.Open();
                string sql ="select * from Inventory";
                SqlCommand cmd=new SqlCommand(sql,connection);
                using(SqlDataReader sdr=cmd.ExecuteReader())
                {
                    while(sdr.Read())
                    {
                        Inventory inventory=new Inventory ();
                        inventory.Id=Convert.ToInt32(sdr["Id"]);
                          inventory.Name=Convert.ToString(sdr["Name"]);
                            inventory.Price=Convert.ToDecimal(sdr["Price"]);
                              inventory.Quantity=Convert.ToInt32(sdr["Quantity"]);
                                inventory.AddedOn=Convert.ToDateTime(sdr["AddedOn"]);
                                inventoryList.Add (inventory);
                    }
                    connection.Close();
                }

            }
            return View(inventoryList);
        }

        [HttpGet]
        public IActionResult Create()
        {
            return View();
        }
 
        [HttpPost]
        public IActionResult Create(Inventory inventory)
        {
            
            string connectionString = Configuration["ConnectionStrings:DefaultConnection"];
            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                string sql = $"Insert Into Inventory (Name, Price, Quantity) Values ('{inventory.Name}', '{inventory.Price}','{inventory.Quantity}')";
 
                using (SqlCommand command = new SqlCommand(sql, connection))
                {
                   // command.CommandType = CommandType.Text;
 
                    connection.Open();
                    command.ExecuteNonQuery();
                    connection.Close();
                }
            }
            ViewBag.Result = "Success";
            return View();
        }

        [HttpGet]
        public IActionResult Update(int id)
        {
            Inventory inventory=new Inventory ();
           string connectionString = Configuration["ConnectionStrings:DefaultConnection"];
            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                connection.Open();
                string sql =$"select * from Inventory where Id='{id}'";
                SqlCommand cmd=new SqlCommand(sql,connection);
                using(SqlDataReader sdr=cmd.ExecuteReader())
                {
                    while(sdr.Read())
                    {
                       
                        inventory.Id=Convert.ToInt32(sdr["Id"]);
                          inventory.Name=Convert.ToString(sdr["Name"]);
                            inventory.Price=Convert.ToDecimal(sdr["Price"]);
                              inventory.Quantity=Convert.ToInt32(sdr["Quantity"]);
                                inventory.AddedOn=Convert.ToDateTime(sdr["AddedOn"]);
                               
                    }
                    connection.Close();
                }

            }
            return View(inventory);
        }

        [HttpPost]
         public IActionResult Update(Inventory inventory,int id)
        {
        string connectionString = Configuration["ConnectionStrings:DefaultConnection"];
            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                string sql=$"Update Inventory SET Name='{inventory.Name}',Price='{inventory.Price}',Quantity='{inventory.Quantity}' where Id='{id}'";
              using (SqlCommand command = new SqlCommand(sql, connection))
                {
                  
 
                    connection.Open();
                    command.ExecuteNonQuery();
                    connection.Close();
                }
            }
            return RedirectToAction("Index");
        }

        [HttpPost]
         public IActionResult Delete(int id)
         {
            string connectionString = Configuration["ConnectionStrings:DefaultConnection"];
            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                string sql=$"Delete from Inventory where Id='{id}'";
                using (SqlCommand command = new SqlCommand(sql, connection))
                {
                  
 
                    connection.Open();
                    command.ExecuteNonQuery();
                    connection.Close();
                }
                 return RedirectToAction("Index");
         }
         }
        
        
    }
